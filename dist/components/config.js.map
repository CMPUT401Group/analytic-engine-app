{"version":3,"sources":["../../src/components/config.js"],"names":["_","appName","AnalyticEngineAppConfigCtrl","$scope","$injector","$q","backendSrv","alertSrv","appEditCtrl","setPreUpdateHook","preUpdate","bind","setPostUpdateHook","postUpdate","model","appModel","enabled","resolve","isString","analyticEngineURL","errorMsg","reject","console","log","appConfig","post","then","resp","importDashboards","url","message","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;AAEHC,a,GAAU,iB;;6CAEDC,2B;AACX,6CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,EAA/B,EAAmCC,UAAnC,EAA+CC,QAA/C,EAAyD;AAAA;;AACvD,eAAKF,EAAL,GAAUA,EAAV;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,WAAL,CAAiBC,gBAAjB,CAAkC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlC;AACA,eAAKH,WAAL,CAAiBI,iBAAjB,CAAmC,KAAKC,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAnC;;AAEA;AACA;AACD;;;;sCAEW;AACV,gBAAIG,QAAQ,KAAKC,QAAjB;AACA,gBAAI,CAACD,MAAME,OAAX,EAAoB;AAClB,qBAAO,KAAKX,EAAL,CAAQY,OAAR,EAAP;AACD;;AAED,gBAAI,CAACjB,EAAEkB,QAAF,CAAWJ,MAAMK,iBAAjB,CAAL,EAA0C;AACxCL,oBAAME,OAAN,GAAgB,KAAhB;AACA,mBAAKI,QAAL,GAAmBnB,OAAnB;AACA,qBAAO,KAAKI,EAAL,CAAQgB,MAAR,CAAe,KAAKD,QAApB,CAAP;AACD;;AAEDE,oBAAQC,GAAR,CAAYT,MAAMK,iBAAlB;AACA,gBAAIK,YAAY;AACdL,iCAAmBL,MAAMK;AADX,aAAhB;;AAKA,mBAAO,KAAKb,UAAL,CAAgBmB,IAAhB,CAAqB,6CAArB,EAAoED,SAApE,EAA+EE,IAA/E,CAAoF,UAACC,IAAD,EAAU;AACnGL,sBAAQC,GAAR,CAAY,iCAAZ;AACD,aAFM,CAAP;AAGD;;;uCAEY;AACX,gBAAI,CAAC,KAAKR,QAAL,CAAcC,OAAnB,EAA4B;AAC1B,qBAAO,KAAKX,EAAL,CAAQY,OAAR,EAAP;AACD;;AAED,mBAAO,KAAKT,WAAL,CAAiBoB,gBAAjB,GAAoCF,IAApC,CAAyC,YAAM;AACpD,qBAAO;AACLG,qBAAK,mCADA;AAELC,yBAAS;AAFJ,eAAP;AAID,aALM,CAAP;AAMD;;;;;;;;AAEH5B,kCAA4B6B,WAA5B,GAA0C,wBAA1C","file":"config.js","sourcesContent":["import _ from 'lodash'\n\nlet appName = \"Analytic Engine\";\n\nexport class AnalyticEngineAppConfigCtrl {\n  constructor($scope, $injector, $q, backendSrv, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    // TODO: We will worry about security later. As for the moment,\n    //       anyone can do query to our analyic-engine.\n  }\n\n  preUpdate() {\n    let model = this.appModel;\n    if (!model.enabled) {\n      return this.$q.resolve();\n    }\n\n    if (!_.isString(model.analyticEngineURL)) {\n      model.enabled = false;\n      this.errorMsg = `${appName} Server URL not set`;\n      return this.$q.reject(this.errorMsg);\n    }\n\n    console.log(model.analyticEngineURL);\n    let appConfig = {\n      analyticEngineURL: model.analyticEngineURL\n    };\n\n\n    return this.backendSrv.post('api/plugin-proxy/analytic-engine-app/config', appConfig).then((resp) => {\n      console.log('Analytic Engine config updated.');\n    });\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return this.$q.resolve();\n    }\n\n    return this.appEditCtrl.importDashboards().then(() => {\n      return {\n        url: \"dashboard/db/analytic-engine-home\",\n        message: \"worldPing app installed!\"\n      };\n    });\n  }\n}\nAnalyticEngineAppConfigCtrl.templateUrl = 'components/config.html';\n\n\n"]}