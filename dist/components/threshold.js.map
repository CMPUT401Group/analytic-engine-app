{"version":3,"sources":["../../src/components/threshold.js"],"names":["ThresholdPageCtrl","$scope","$injector","$http","$log","backendSrv","threshold","updateThreshold","getConfig","log","config","url","jsonData","analyticEngineURL","method","then","response","thresholds","data","map","pattern","console","cb","get","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAMA,iB;AACJ,mCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,IAAtC,EAA4CC,UAA5C,EAAwD;AAAA;;AACtD,eAAKJ,MAAL,GAAcA,MAAd;AACA,eAAKE,KAAL,GAAaA,KAAb;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKC,UAAL,GAAkBA,UAAlB;;AAEA,eAAKC,SAAL,GAAiB,EAAjB;;AAEA,eAAKC,eAAL;AACD;;;;4CAEiB;AAAA;;AAChB,iBAAKC,SAAL,CAAe,kBAAU;AACvB,oBAAKJ,IAAL,CAAUK,GAAV,CAAcC,MAAd;AACA,kBAAIC,MAAMD,OAAOE,QAAP,CAAgBC,iBAA1B;AACA,oBAAKV,KAAL,CAAW;AACTW,wBAAQ,KADC;AAETH,qBAAQA,GAAR;AAFS,eAAX,EAGGI,IAHH,CAGQ,oBAAY;AAClB,sBAAKX,IAAL,CAAUK,GAAV,CAAcO,QAAd;AACA;AACA;AACA,sBAAKf,MAAL,CAAYgB,UAAZ,GAAyBD,SAASE,IAAT,CAAcC,GAAd,CAAkB,qBAAa;AACtD,yBAAOb,UAAUc,OAAV,CAAkB,CAAlB,CAAP;AACD,iBAFwB,CAAzB;AAGD,eAVD,EAUG,oBAAY;AACb;AACAC,wBAAQZ,GAAR,CAAYO,QAAZ;AACD,eAbD;AAcD,aAjBD;AAkBD;;;oCAESM,E,EAAI;AACZ,iBAAKjB,UAAL,CAAgBkB,GAAhB,CAAoB,0CAApB,EAAgER,IAAhE,CAAqE,UAASL,MAAT,EAAiB;AACpFY,iBAAGZ,MAAH;AACD,aAFD;AAGD;;;;;;AAGHV,wBAAkBwB,WAAlB,GAAgC,2BAAhC;;mCACOxB,iB","file":"threshold.js","sourcesContent":["class ThresholdPageCtrl {\n  constructor($scope, $injector, $http, $log, backendSrv) {\n    this.$scope = $scope;\n    this.$http = $http;\n    this.$log = $log;\n    this.backendSrv = backendSrv;\n\n    this.threshold = [];\n\n    this.updateThreshold();\n  }\n\n  updateThreshold() {\n    this.getConfig(config => {\n      this.$log.log(config);\n      let url = config.jsonData.analyticEngineURL;\n      this.$http({\n        method: 'GET',\n        url: `${url}/pattern/threshold`\n      }).then(response => {\n        this.$log.log(response);\n        // TODO: for now we only handle threshold with one pattern inside. Note,\n        //       a single threshold pattern can hold many threshold inside. Refactor?\n        this.$scope.thresholds = response.data.map(threshold => {\n          return threshold.pattern[0];\n        });\n      }, response => {\n        // todo: Use grafana toast thing to report error.\n        console.log(response);\n      });\n    });\n  }\n\n  getConfig(cb) {\n    this.backendSrv.get('api/plugins/analytic-engine-app/settings').then(function(config) {\n      cb(config);\n    });\n  }\n}\n\nThresholdPageCtrl.templateUrl = 'components/threshold.html';\nexport{ThresholdPageCtrl};\n"]}