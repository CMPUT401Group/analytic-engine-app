{"version":3,"sources":["../../src/components/threshold.js"],"names":["angular","homePage","resultPage","thresholdApp","module","config","$routeProvider","when","template","ThresholdPageCtrl","$scope","$injector","$http","$log","backendSrv","thresholds","updateThreshold","getConfig","url","jsonData","analyticEngineURL","method","then","response","data","map","threshold","pattern","console","log","cb","get","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AAEAC,c;;AACAC,gB;;;;;;;;;;;;;;;;;;;;;AAEHC,kB,GAAeH,QAAQI,MAAR,CAAe,cAAf,EAA+B,CAAC,SAAD,CAA/B,C;;AACnBD,mBAAaE,MAAb,CAAoB,UAASC,cAAT,EAAyB;AAC3CA,uBACGC,IADH,CACQ,GADR,EACa;AACTC,oBAAUP;AADD,SADb,EAGKM,IAHL,CAGU,SAHV,EAGqB;AACnBC,oBAAUN;AADS,SAHrB;AAMD,OAPD;;mCASMO,iB;AACJ,mCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,IAAtC,EAA4CC,UAA5C,EAAwD;AAAA;;AACtD,eAAKJ,MAAL,GAAcA,MAAd;AACA,eAAKE,KAAL,GAAaA,KAAb;AACA,eAAKC,IAAL,GAAYA,IAAZ;AACA,eAAKC,UAAL,GAAkBA,UAAlB;;AAEA,eAAKC,UAAL,GAAkB,EAAlB;;AAEA,eAAKC,eAAL;AACD;;;;4CAEiB;AAAA;;AAChB,iBAAKC,SAAL,CAAe,kBAAU;AACvB,kBAAIC,MAAMb,OAAOc,QAAP,CAAgBC,iBAA1B;AACA,oBAAKR,KAAL,CAAW;AACTS,wBAAQ,KADC;AAETH,qBAAQA,GAAR;AAFS,eAAX,EAGGI,IAHH,CAGQ,oBAAY;AAClB;AACA;AACA,sBAAKP,UAAL,GAAkBQ,SAASC,IAAT,CAAcC,GAAd,CAAkB,qBAAa;AAC/C,yBAAOC,UAAUC,OAAV,CAAkB,CAAlB,CAAP;AACD,iBAFiB,CAAlB;AAGD,eATD,EASG,oBAAY;AACb;AACAC,wBAAQC,GAAR,CAAYN,QAAZ;AACD,eAZD;AAaD,aAfD;AAgBD;;;oCAESO,E,EAAI;AACZ,iBAAKhB,UAAL,CAAgBiB,GAAhB,CAAoB,0CAApB,EAAgET,IAAhE,CAAqE,UAASjB,MAAT,EAAiB;AACpFyB,iBAAGzB,MAAH;AACD,aAFD;AAGD;;;;;;AAGHI,wBAAkBuB,WAAlB,GAAgC,2BAAhC;;mCACOvB,iB","file":"threshold.js","sourcesContent":["import angular from 'angular';\n\nimport homePage from \"threshold-pages/home.html\";\nimport resultPage from \"threshold-pages/result.html\";\n\nlet thresholdApp = angular.module(\"thresholdApp\", [\"ngRoute\"]);\nthresholdApp.config(function($routeProvider) {\n  $routeProvider\n    .when(\"/\", {\n      template: homePage\n    }).when(\"/result\", {\n    template: resultPage\n    });\n});\n\nclass ThresholdPageCtrl {\n  constructor($scope, $injector, $http, $log, backendSrv) {\n    this.$scope = $scope;\n    this.$http = $http;\n    this.$log = $log;\n    this.backendSrv = backendSrv;\n\n    this.thresholds = [];\n\n    this.updateThreshold();\n  }\n\n  updateThreshold() {\n    this.getConfig(config => {\n      let url = config.jsonData.analyticEngineURL;\n      this.$http({\n        method: 'GET',\n        url: `${url}/pattern/threshold`\n      }).then(response => {\n        // TODO: for now we only handle threshold with one pattern inside. Note,\n        //       a single threshold pattern can hold many threshold inside. Refactor?\n        this.thresholds = response.data.map(threshold => {\n          return threshold.pattern[0];\n        });\n      }, response => {\n        // todo: Use grafana toast thing to report error.\n        console.log(response);\n      });\n    });\n  }\n\n  getConfig(cb) {\n    this.backendSrv.get('api/plugins/analytic-engine-app/settings').then(function(config) {\n      cb(config);\n    });\n  }\n}\n\nThresholdPageCtrl.templateUrl = 'components/threshold.html';\nexport{ThresholdPageCtrl};\n"]}